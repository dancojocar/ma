plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk compile_sdk_version
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId "com.example.android.advancedcoroutines"
        minSdkVersion min_sdk_version
        targetSdkVersion compile_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
  namespace 'com.example.android.advancedcoroutines'
}

dependencies {
    // dependencies are defined in ext arrays in coroutines-codelab/build.gradle
    implementation project(':sunflower')

    implementation libraries
    implementation arch_libraries


    implementation("androidx.room:room-runtime:2.6.0")
    annotationProcessor("androidx.room:room-compiler:2.6.0")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:2.6.0")

    // To use Kotlin Symbol Processing (KSP)
//    ksp("androidx.room:room-compiler:2.6.0")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:2.6.0")

    // optional - RxJava2 support for Room
    implementation("androidx.room:room-rxjava2:2.6.0")

    // optional - RxJava3 support for Room
    implementation("androidx.room:room-rxjava3:2.6.0")

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation("androidx.room:room-guava:2.6.0")

    testImplementation testLibraries
    androidTestImplementation androidTestLibraries
}
